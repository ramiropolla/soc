diff --git a/libavformat/utils.c b/libavformat/utils.c
index 0c1a50d..d2f0f96 100644
--- a/libavformat/utils.c
+++ b/libavformat/utils.c
@@ -27,6 +27,7 @@
 #include <sys/time.h>
 #include <time.h>
 #include <strings.h>
+#include "concat.h"
 
 #undef NDEBUG
 #include <assert.h>
@@ -433,6 +434,7 @@ int av_open_input_file(AVFormatContext **ic_ptr, const char *filename,
                        AVFormatParameters *ap)
 {
     int err, probe_size;
+    PlaylistContext *playlist_ctx;
     AVProbeData probe_data, *pd = &probe_data;
     ByteIOContext *pb = NULL;
 
@@ -447,6 +449,27 @@ int av_open_input_file(AVFormatContext **ic_ptr, const char *filename,
         fmt = av_probe_input_format(pd, 0);
     }
 
+    playlist_ctx = ff_playlist_from_encodedstring(filename, ',');
+    if (playlist_ctx) {
+        AVFormatContext *ic;
+        AVFormatParameters default_ap;
+        if(!ap){
+            ap=&default_ap;
+            memset(ap, 0, sizeof(default_ap));
+        }
+        if(!ap->prealloced_context)
+            ic = *ic_ptr = avformat_alloc_context();
+        else
+            ic = *ic_ptr;
+        av_log(ic, AV_LOG_DEBUG, "Generating playlist from %s\n", filename);
+        av_strlcpy(ic->filename, filename, sizeof(ic->filename));
+        ic->iformat = ff_concat_alloc_demuxer();
+        ff_playlist_set_context(ic, playlist_ctx);
+        ff_playlist_populate_context(playlist_ctx, playlist_ctx->pe_curidx);
+        ff_playlist_set_streams(ic);
+        return 0;
+    }
+
     /* Do not open file if the format does not need it. XXX: specific
        hack needed to handle RTSP/TCP */
     if (!fmt || !(fmt->flags & AVFMT_NOFILE)) {
@@ -909,7 +932,12 @@ static void compute_pkt_fields(AVFormatContext *s, AVStream *st,
 static int av_read_frame_internal(AVFormatContext *s, AVPacket *pkt)
 {
     AVStream *st;
-    int len, ret, i;
+    int len, ret, i, offset;
+    int stream_index;
+    AVStream *stream;
+    stream_index = 0;
+    stream = 0;
+    offset = 0;
 
     av_init_packet(pkt);
 
@@ -943,8 +971,10 @@ static int av_read_frame_internal(AVFormatContext *s, AVPacket *pkt)
                 /* return packet if any */
                 if (pkt->size) {
                 got_packet:
+                    pkt->stream = st;
+                    pkt->stream_index = stream_index;
+                    pkt->index_offset = offset;
                     pkt->duration = 0;
-                    pkt->stream_index = st->index;
                     pkt->pts = st->parser->pts;
                     pkt->dts = st->parser->dts;
                     pkt->pos = st->parser->pos;
@@ -968,6 +998,9 @@ static int av_read_frame_internal(AVFormatContext *s, AVPacket *pkt)
             AVPacket cur_pkt;
             /* read next packet */
             ret = av_read_packet(s, &cur_pkt);
+            offset = cur_pkt.index_offset;
+            stream_index = cur_pkt.stream_index;
+            stream = cur_pkt.stream;
             if (ret < 0) {
                 if (ret == AVERROR(EAGAIN))
                     return ret;
@@ -980,8 +1013,9 @@ static int av_read_frame_internal(AVFormatContext *s, AVPacket *pkt)
                                         NULL, 0,
                                         AV_NOPTS_VALUE, AV_NOPTS_VALUE,
                                         AV_NOPTS_VALUE);
-                        if (pkt->size)
+                        if (pkt->size) {
                             goto got_packet;
+                        }
                     }
                 }
                 /* no more packets: really terminate parsing */
