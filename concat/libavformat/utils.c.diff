diff --git a/libavformat/utils.c b/libavformat/utils.c
index 4cec286..f673716 100644
--- a/libavformat/utils.c
+++ b/libavformat/utils.c
@@ -27,6 +27,8 @@
 #include <sys/time.h>
 #include <time.h>
 #include <strings.h>
+#include "libavformat/avplaylist.h"
+#include "libavformat/playlist.h"
 
 #undef NDEBUG
 #include <assert.h>
@@ -432,7 +434,8 @@ int av_open_input_file(AVFormatContext **ic_ptr, const char *filename,
                        int buf_size,
                        AVFormatParameters *ap)
 {
-    int err, probe_size;
+    int err, probe_size, flist_len, i;
+    char **flist;
     AVProbeData probe_data, *pd = &probe_data;
     ByteIOContext *pb = NULL;
 
@@ -447,6 +450,31 @@ int av_open_input_file(AVFormatContext **ic_ptr, const char *filename,
         fmt = av_probe_input_format(pd, 0);
     }
 
+    ff_playlist_split_encodedstring(filename, ',', &flist, &flist_len);
+    if (flist && flist_len > 1) {
+        AVFormatContext *ic = ff_playlist_alloc_concat_formatcontext();
+        if (ic) {
+            AVPlaylistContext *playlist_ctx = ic->priv_data;
+            if (playlist_ctx) {
+                av_log(ic, AV_LOG_DEBUG, "Generating playlist from %s\n", filename);
+                for (i = 0; i < flist_len; ++i) {
+                    av_playlist_insert_item(playlist_ctx, flist[i], playlist_ctx->pelist_size);
+                    av_free(flist[i]);
+                }
+                av_free(flist);
+                av_strlcpy(ic->filename, filename, sizeof(ic->filename));
+                if (!playlist_ctx->formatcontext_list[playlist_ctx->pe_curidx]) {
+                    if (!(playlist_ctx->formatcontext_list[playlist_ctx->pe_curidx] =
+                        ff_playlist_alloc_formatcontext(playlist_ctx->flist[playlist_ctx->pe_curidx])))
+                        return AVERROR_NOFMT;
+                }
+                ff_playlist_set_streams(playlist_ctx);
+                *ic_ptr = ic;
+                return 0;
+            }
+        }
+    }
+
     /* Do not open file if the format does not need it. XXX: specific
        hack needed to handle RTSP/TCP */
     if (!fmt || !(fmt->flags & AVFMT_NOFILE)) {
