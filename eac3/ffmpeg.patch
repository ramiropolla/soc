Index: libavcodec/ac3dec.h
===================================================================
--- libavcodec/ac3dec.h	(revision 15141)
+++ libavcodec/ac3dec.h	(working copy)
@@ -42,7 +42,13 @@
 #define AC3_MAX_COEFS   256
 #define AC3_BLOCK_SIZE  256
 #define MAX_BLOCKS        6
+#define CPL_MAX_BANDS    18
+#define SPX_MAX_BANDS    17
 
+#define INT24_MIN -8388608
+#define INT24_MAX  8388607
+#define M_SQRT_POW2_15 181
+
 typedef struct {
     AVCodecContext *avctx;                  ///< parent context
     GetBitContext gbc;                      ///< bitstream reader
@@ -79,15 +85,34 @@
     int cpl_strategy_exists[MAX_BLOCKS];    ///< coupling strategy exists               (cplstre)
     int channel_in_cpl[AC3_MAX_CHANNELS];   ///< channel in coupling                    (chincpl)
     int phase_flags_in_use;                 ///< phase flags in use                     (phsflginu)
-    int phase_flags[18];                    ///< phase flags                            (phsflg)
+    int phase_flags[CPL_MAX_BANDS];         ///< phase flags                            (phsflg)
     int num_cpl_subbands;                   ///< number of coupling sub bands           (ncplsubnd)
     int num_cpl_bands;                      ///< number of coupling bands               (ncplbnd)
-    uint8_t cpl_band_struct[18];            ///< coupling band structure                (cplbndstrc)
+    uint8_t cpl_band_struct[CPL_MAX_BANDS]; ///< coupling band structure                (cplbndstrc)
     int firstchincpl;                       ///< first channel in coupling
     int first_cpl_coords[AC3_MAX_CHANNELS]; ///< first coupling coordinates states      (firstcplcos)
-    int cpl_coords[AC3_MAX_CHANNELS][18];   ///< coupling coordinates                   (cplco)
+    int cpl_coords[AC3_MAX_CHANNELS][CPL_MAX_BANDS];    ///< coupling coordinates       (cplco)
 ///@}
 
+///@defgroup spx spectral extension
+    int spx_in_use[MAX_BLOCKS];             ///< spectral extension in use              (spxinu)
+    int channel_in_spx[AC3_MAX_CHANNELS];   ///< channel in spectral extension          (chinspx)
+    int spx_atten_code[AC3_MAX_CHANNELS];   ///< spx attenuation code                   (spxattencod)
+    int spx_coords_exist[AC3_MAX_CHANNELS]; ///< indicates if a channel has spx coords  (spxcoe)
+    int spx_start_subband;                  ///< spx beginning frequency band           (spxbegf)
+    int spx_start_freq;                     ///< spx start frequency bin
+    int spx_end_freq;                       ///< spx end frequency bin
+    int spx_copy_start_freq;                ///< spx starting frequency for copying     (copystartmant)
+    int num_spx_subbands;                   ///< number of spectral extension subbands
+    int num_spx_bands;                      ///< number of spectral extension bands     (nspxbnds)
+    uint8_t spx_band_struct[SPX_MAX_BANDS]; ///< spectral extension band structure      (spxbndstrc)
+    int spx_band_sizes[SPX_MAX_BANDS];      ///< number of bins in each band            (spxbndsztab)
+    int first_spx_coords[AC3_MAX_CHANNELS]; ///< first spx coordinates states           (firstspxcos)
+    int spx_noise_blend[AC3_MAX_CHANNELS][SPX_MAX_BANDS];   ///< spx noise blending factor  (nblendfact)
+    int spx_signal_blend[AC3_MAX_CHANNELS][SPX_MAX_BANDS];  ///< spx signal blending factor (sblendfact)
+    int spx_coords[AC3_MAX_CHANNELS][SPX_MAX_BANDS];    ///< spectral extension coordinates (spxco)
+///@}
+
 ///@defgroup aht adaptive hybrid transform
     int channel_uses_aht[AC3_MAX_CHANNELS];                         ///< channel AHT in use (chahtinu)
     int pre_mantissa[AC3_MAX_CHANNELS][AC3_MAX_COEFS][MAX_BLOCKS];  ///< pre-IDCT mantissas
@@ -179,4 +204,6 @@
  */
 void ff_eac3_decode_transform_coeffs_aht_ch(AC3DecodeContext *s, int ch);
 
+void ff_eac3_apply_spectral_extension(AC3DecodeContext *s);
+
 #endif /* AVCODEC_AC3DEC_H */
Index: libavcodec/ac3dec_data.c
===================================================================
--- libavcodec/ac3dec_data.c	(revision 15141)
+++ libavcodec/ac3dec_data.c	(working copy)
@@ -1128,6 +1128,51 @@
 { 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1 };
 
 /**
+ * Table E2.15 Default Spectral Extension Banding Structure
+ */
+const uint8_t ff_eac3_default_spx_band_struct[17] =
+{ 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1 };
+
+/**
+ * Table E.25: Spectral Extension Attenuation Table
+ * spx_attenuation_tab[code][bin]=lrint(pow(1<<(bin+1),(code+1)/-15.0)*(1<<23));
+ */
+const int32_t ff_eac3_spx_atten_tab[32][3] = {
+    { 8009792, 7648083, 7302707 },
+    { 7648083, 6972929, 6357376 },
+    { 7302707, 6357376, 5534417 },
+    { 6972929, 5796163, 4817990 },
+    { 6658043, 5284492, 4194304 },
+    { 6357376, 4817990, 3651354 },
+    { 6070287, 4392670, 3178688 },
+    { 5796163, 4004896, 2767209 },
+    { 5534417, 3651354, 2408995 },
+    { 5284492, 3329021, 2097152 },
+    { 5045853, 3035144, 1825677 },
+    { 4817990, 2767209, 1589344 },
+    { 4600417, 2522926, 1383604 },
+    { 4392670, 2300209, 1204498 },
+    { 4194304, 2097152, 1048576 },
+    { 4004896, 1912021,  912838 },
+    { 3824041, 1743232,  794672 },
+    { 3651354, 1589344,  691802 },
+    { 3486464, 1449041,  602249 },
+    { 3329021, 1321123,  524288 },
+    { 3178688, 1204498,  456419 },
+    { 3035144, 1098167,  397336 },
+    { 2898081, 1001224,  345901 },
+    { 2767209,  912838,  301124 },
+    { 2642246,  832255,  262144 },
+    { 2522926,  758786,  228210 },
+    { 2408995,  691802,  198668 },
+    { 2300209,  630732,  172951 },
+    { 2196335,  575052,  150562 },
+    { 2097152,  524288,  131072 },
+    { 2002448,  478005,  114105 },
+    { 1912021,  435808,   99334 }
+};
+
+/**
  * Table of bin locations for rematrixing bands
  * reference: Section 7.5.2 Rematrixing : Frequency Band Definitions
  */
Index: libavcodec/ac3dec_data.h
===================================================================
--- libavcodec/ac3dec_data.h	(revision 15141)
+++ libavcodec/ac3dec_data.h	(working copy)
@@ -34,6 +34,8 @@
 extern const int16_t (*ff_eac3_mantissa_vq[8])[6];
 extern const uint8_t ff_eac3_frm_expstr[32][6];
 extern const uint8_t ff_eac3_default_cpl_band_struct[18];
+extern const uint8_t ff_eac3_default_spx_band_struct[17];
+extern const int32_t ff_eac3_spx_atten_tab[32][3];
 
 extern const uint8_t ff_ac3_rematrix_band_tab[5];
 
